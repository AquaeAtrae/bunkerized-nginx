version: '3'

services:

  mywww:
    image: bunkerity/bunkerized-nginx
    restart: always
    depends_on:
      - mywp
    ports:
      - 80:8080
      - 443:8443
    # bunkerized-nginx runs as an unprivileged user with UID/GID 101
    # don't forget to edit the permissions of the files and folders accordingly
    volumes:
      - ./wp-files:/www:ro
      - ./letsencrypt:/etc/letsencrypt
      - ./server-confs:/server-confs:ro         # custom confs at server context for permalinks
      - ./modsec-crs-confs:/modsec-crs-confs:ro # custom Core Rule Set confs to add WordPress exclusions
      - ./modsec-confs:/modsec-confs:ro         # avoid some false positives with CRS
    environment:
      - SERVER_NAME=www.example.com             # replace with your domain
      - AUTO_LETS_ENCRYPT=yes
      - REDIRECT_HTTP_TO_HTTPS=yes
      - DISABLE_DEFAULT_SERVER=yes
      - MAX_CLIENT_SIZE=50m
      - USE_CLIENT_CACHE=yes
      - USE_GZIP=yes
      - REMOTE_PHP=mywp
      - REMOTE_PHP_PATH=/var/www/html
      - CONTENT_SECURITY_POLICY=object-src ‘none’; frame-ancestors ‘self’; form-action ‘self’; block-all-mixed-content; sandbox allow-modals allow-forms allow-same-origin allow-scripts allow-popups allow-downloads; base-uri ‘self’;
      #   ^ WordPress uses CSP allow-models pop-ups to confirm deleting Media, etc 
      - USE_WHITELIST_IP=yes
      - WHITELIST_IP_LIST=10.1.0.1  # [does not bypass modsecurity] either whitelist nginx docker ip within net1, or...  
      #- BLOCK_USER_AGENT=no   # WordPress REST API vs. https://github.com/JayBizzle/Crawler-Detect/blob/master/raw/Crawlers.txt#L1300 blocks "WordPress\/"
    networks:
      - net1

  mywp:
    image: wordpress:fpm-alpine
    restart: always
    extra_hosts:
      - "www.example.com:10.1.0.1"    # replace with your website, referencing nginx service to allow WordPress Site Health Status to cUrl own API from isolated php-fpm service
    secrets:
      - MYWP_DB_PASSWORD
    volumes:
      - ./wp-files:/var/www/html
      - ./php-custom.d/opcache-recommended.ini:/usr/local/etc/php/conf.d/opcache-recommended.ini:ro  # recommended for production only, caches all php files
      - ./php-custom.d/uploads.ini:/usr/local/etc/php/conf.d/uploads.ini:ro
    environment:
      - WORDPRESS_DB_HOST=mydb
      - WORDPRESS_DB_NAME=wp
      - WORDPRESS_DB_USER=user
      #- WORDPRESS_DB_PASSWORD=db-user-pwd       # replace with a stronger password (must match MYSQL_PASSWORD) here or within...
      - WORDPRESS_DB_PASSWORD_FILE=/run/secrets/MYWP_DB_PASSWORD
      - WORDPRESS_TABLE_PREFIX=prefix_          # best practice : replace with a random prefix
    networks:
      - net1

  mydb:
    image: mariadb
    restart: always
    secrets:
      - MYWP_DB_PASSWORD
    volumes:
      - ./db-data:/var/lib/mysql
    environment:
      #- MYSQL_ROOT_PASSWORD=db-root-pwd         # replace with a stronger password, or randomize with...
      - MYSQL_RANDOM_ROOT_PASSWORD=1
      - MYSQL_DATABASE=wp
      - MYSQL_USER=user
      #- MYSQL_PASSWORD=db-user-pwd              # replace with a stronger password (must match WORDPRESS_DB_PASSWORD) here or within...
      - MYSQL_PASSWORD_FILE=/run/secrets/MYWP_DB_PASSWORD
    networks:
      - net1

secrets:
  MYWP_DB_PASSWORD:
    file: ./MYWP_DB_PASSWORD.secret

networks:
  net1:
    driver: bridge
    ipam:
      config:   # subnet defined for php-fpm extra_hosts
        - subnet: 10.1.0.0/16
          gateway: 10.1.0.1